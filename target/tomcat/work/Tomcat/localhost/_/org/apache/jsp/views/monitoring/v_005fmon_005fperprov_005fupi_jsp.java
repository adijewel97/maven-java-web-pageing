/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-05-21 05:49:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.monitoring;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class v_005fmon_005fperprov_005fupi_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"pt-4 px-4\">\r\n");
      out.write("    <h2 class=\"mb-4\">Data Pelanggan BPBL Per Provinsi / UPI</h2>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container mt-4\">\r\n");
      out.write("        <div class=\"border rounded p-4 shadow-sm\">\r\n");
      out.write("            <h5 class=\"fw-bold mb-4\">Monitoring Temuan Baru Per UPI / Provinsi</h5>\r\n");
      out.write("\r\n");
      out.write("            <form id=\"form-monitoring\">\r\n");
      out.write("                <div class=\"row g-3 mb-3\">\r\n");
      out.write("                    <div class=\"col-md-4\">\r\n");
      out.write("                        <label for=\"jenis\" class=\"form-label\">Jenis</label>\r\n");
      out.write("                        <select class=\"form-select\" id=\"jenis\" name=\"jenis\">\r\n");
      out.write("                            <option value=\"PROVINSI\">PROVINSI</option>\r\n");
      out.write("                            <option value=\"UPI\">UPI</option>\r\n");
      out.write("                            <option value=\"PENGUSUL\">PENGUSUL</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-md-4\">\r\n");
      out.write("                        <label for=\"selectdata\" class=\"form-label\">Kriteria Data</label>\r\n");
      out.write("                        <select id=\"selectdata\" class=\"form-select\">\r\n");
      out.write("                            <option value=\"TOTAL_SUMBER\">TOTAL SUMBER</option>\r\n");
      out.write("                            <option value=\"NIK_BLM_VALID\">NIK BELUM VALID</option>\r\n");
      out.write("                            <option value=\"NIK_VALID\">NIK VALID</option>\r\n");
      out.write("                            <option value=\"NIK_VALID_KOREKSI\">NIK VALID KOREKSI</option>\r\n");
      out.write("                            <option value=\"BLM_VERIFIKASI_DJK\">BELUM VERIFIKASI DJK</option>\r\n");
      out.write("                            <option value=\"VERIFIKASI_DJK\">VERIFIKASI DJK</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-md-4\">\r\n");
      out.write("                        <label for=\"selectTahun\" class=\"form-label\">Tahun</label>\r\n");
      out.write("                        <select class=\"form-select\" id=\"selectTahun\" name=\"selectTahun\">\r\n");
      out.write("                            <option value=\"2025\">2025</option>\r\n");
      out.write("                            <option value=\"2024\">2024</option>\r\n");
      out.write("                            <option value=\"2023\">2023</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-md-12 text-start\">\r\n");
      out.write("                        <button id=\"btnTampil\" type=\"button\" class=\"btn btn-primary\">\r\n");
      out.write("                            <i class=\"bi bi-search\"></i> Tampilkan\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"mt-4\">\r\n");
      out.write("            <div class=\"mb-2\">\r\n");
      out.write("                <button id=\"downloadExcelBtnPage\" class=\"btn btn-success mb-3\">Download Excel Per Halaman</button>\r\n");
      out.write("                <button id=\"downloadExcelBtnAll\" class=\"btn btn-primary mb-3\">Download Excel Semua Halaman</button>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <table id=\"bpblTable\" class=\"table table-bordered table-hover nowrap\" style=\"width:100%\">\r\n");
      out.write("                <thead class=\"table-dark\">\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>No</th>\r\n");
      out.write("                        <th>DATA</th>\r\n");
      out.write("                        <th>ID_KOLEKTIF</th>\r\n");
      out.write("                        <th>NAMA_PELANGGAN</th>\r\n");
      out.write("                        <th>UNITUP</th>\r\n");
      out.write("                        <th>KD_PROV</th>\r\n");
      out.write("                        <th>PROVINSI</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- SheetJS untuk export Excel -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        var table = $('#bpblTable').DataTable({\r\n");
      out.write("            responsive: true,\r\n");
      out.write("            processing: true,\r\n");
      out.write("            serverSide: true,\r\n");
      out.write("            ajax: {\r\n");
      out.write("                url: '");
      out.print( request.getContextPath() );
      out.write("/bpbl',\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                data: function (d) {\r\n");
      out.write("                    d.vtahun  = $('#selectTahun').val();\r\n");
      out.write("                    d.voption = $('#jenis').val();\r\n");
      out.write("                    d.vdata   = $('#selectdata').val();\r\n");
      out.write("                },\r\n");
      out.write("                dataSrc: 'data',\r\n");
      out.write("                error: function (xhr, error, thrown) {\r\n");
      out.write("                    console.error('Gagal load data:', error, thrown);\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            columns: [\r\n");
      out.write("                {\r\n");
      out.write("                    data: null,\r\n");
      out.write("                    render: function (data, type, row, meta) {\r\n");
      out.write("                        return meta.row + 1 + meta.settings._iDisplayStart;\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                {data: 'DATA', defaultContent: '-'},\r\n");
      out.write("                {data: 'ID_KOLEKTIF', defaultContent: '-'},\r\n");
      out.write("                {data: 'NAMA_PELANGGAN', defaultContent: '-'},\r\n");
      out.write("                {data: 'UNITUP', defaultContent: '-'},\r\n");
      out.write("                {data: 'KD_PROV', defaultContent: '-'},\r\n");
      out.write("                {data: 'PROVINSI', defaultContent: '-'}\r\n");
      out.write("            ],\r\n");
      out.write("            lengthMenu: [[10, 100, 5000], [10, 100, 5000]],\r\n");
      out.write("            pageLength: 10,\r\n");
      out.write("            dom: 'lfrtip',\r\n");
      out.write("            buttons: [\r\n");
      out.write("                {\r\n");
      out.write("                    extend: 'excel',\r\n");
      out.write("                    title: 'Daftar BPBL',\r\n");
      out.write("                    className: 'd-none',\r\n");
      out.write("                    exportOptions: {\r\n");
      out.write("                        columns: ':visible'\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            ]\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#btnTampil').click(function () {\r\n");
      out.write("            table.ajax.reload(null, true); // reload dan reset ke halaman pertama\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#downloadExcelBtnPage').on('click', function () {\r\n");
      out.write("            table.button('.buttons-excel').trigger();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#downloadExcelBtnAll').on('click', async function () {\r\n");
      out.write("            const btn = $(this);\r\n");
      out.write("\r\n");
      out.write("            // Ambil nilai dari input/select, bukan dari variabel EL JSP\r\n");
      out.write("            const vtahun  = $('#selectTahun').val();\r\n");
      out.write("            const voption = $('#jenis').val();\r\n");
      out.write("            const vdata   = $('#selectdata').val();\r\n");
      out.write("\r\n");
      out.write("            if (!vtahun || !voption || !vdata) {\r\n");
      out.write("                alert('Silakan pilih Tahun, Jenis, dan Kriteria Data terlebih dahulu!');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Ambil info paging dari datatable\r\n");
      out.write("            const info = table.page.info();\r\n");
      out.write("            const start = info.start;       // index data mulai (misal 0, 10, 20, ...)\r\n");
      out.write("            const length = info.length;     // panjang halaman (berapa data per page)\r\n");
      out.write("\r\n");
      out.write("            btn.prop('disabled', true).text('Memuat...');\r\n");
      out.write("\r\n");
      out.write("            try {\r\n");
      out.write("                // Panggil API dengan parameter yang benar dan dinamis\r\n");
      out.write("                // const url = \"http://localhost:8080/bpbl?all=true&vtahun=2025&voption=\"PROVINSI\"&vdata=TOTAL_SUMBER&start=0&length=10\";\r\n");
      out.write("                const baseUrl = window.location.origin; // hasilnya misalnya: \"http://localhost:8080\"\r\n");
      out.write("                const url =  baseUrl + \"/bpbl?all=true&vtahun=\"+vtahun+\"&voption=\"+voption+\"&vdata=\"+vdata+\"&start=\"+start+\"&length=\"+length;\r\n");
      out.write("                console.log(\"url : \"+url);\r\n");
      out.write("                const response = await fetch(url);\r\n");
      out.write("\r\n");
      out.write("                if (!response.ok) {\r\n");
      out.write("                    throw new Error('Gagal mengambil data dari server');\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                const json = await response.json();\r\n");
      out.write("                const allData = json.data || [];\r\n");
      out.write("\r\n");
      out.write("                if (allData.length === 0) {\r\n");
      out.write("                    alert('Data kosong, tidak bisa diekspor!');\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // Format data untuk Excel\r\n");
      out.write("                const formattedData = allData.map((item, index) => ({\r\n");
      out.write("                    'NO': index + 1,\r\n");
      out.write("                    'TOTAL': parseInt(item.TOTAL_COUNT || 0),\r\n");
      out.write("                    'TAHUN': vtahun,\r\n");
      out.write("                    'KATEGORI': item.DATA,\r\n");
      out.write("                    'ID KOLEKTIF': item.ID_KOLEKTIF,\r\n");
      out.write("                    'NAMA PELANGGAN': item.NAMA_PELANGGAN,\r\n");
      out.write("                    'UNITUP': item.UNITUP,\r\n");
      out.write("                    'KD PROV': item.KD_PROV,\r\n");
      out.write("                    'PROVINSI': item.PROVINSI\r\n");
      out.write("                }));\r\n");
      out.write("\r\n");
      out.write("                const ws = XLSX.utils.json_to_sheet(formattedData);\r\n");
      out.write("                const wb = XLSX.utils.book_new();\r\n");
      out.write("                XLSX.utils.book_append_sheet(wb, ws, \"BPBL Semua Data\");\r\n");
      out.write("\r\n");
      out.write("                const filename = \"BPBL_\"+voption+\"_\"+vdata+\"_\"+vtahun+\".xlsx\";\r\n");
      out.write("                XLSX.writeFile(wb, filename);\r\n");
      out.write("\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                alert('Terjadi kesalahan saat mengambil data: ' + error.message);\r\n");
      out.write("                console.error('Detail error:', error);\r\n");
      out.write("            } finally {\r\n");
      out.write("                btn.prop('disabled', false).text('Download Excel Semua Halaman');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
